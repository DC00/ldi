
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '4DD5FBB14D3D0DC9F5D05E5BDF48396C'
    
_lr_action_items = {'THEN':([5,13,35,39,44,45,48,54,56,57,58,60,81,83,88,89,90,91,93,94,96,97,113,118,121,124,136,142,146,],[-6,-7,-58,-57,-59,-56,-55,-43,-44,-49,-53,82,-54,-31,-51,-47,-52,-50,-45,-46,-48,-17,-24,-30,-39,-34,-19,-29,-18,]),'WHILE':([28,33,36,37,38,40,41,42,43,65,66,67,68,70,71,73,74,75,76,79,82,84,109,112,115,117,122,125,135,138,141,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'COLON':([13,15,24,26,50,64,103,],[-7,19,29,32,77,87,119,]),'NEW':([28,33,36,37,38,40,41,42,43,65,66,67,68,70,71,73,74,75,76,79,82,84,109,112,115,117,122,125,135,138,141,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'FI':([5,13,35,39,44,45,48,54,56,57,58,81,83,88,89,90,91,93,94,96,97,113,118,121,124,133,136,142,146,],[-6,-7,-58,-57,-59,-56,-55,-43,-44,-49,-53,-54,-31,-51,-47,-52,-50,-45,-46,-48,-17,-24,-30,-39,-34,142,-19,-29,-18,]),'INTEGER':([28,33,36,37,38,40,41,42,43,65,66,67,68,70,71,73,74,75,76,79,82,84,109,112,115,117,122,125,135,138,141,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'TRUE':([28,33,36,37,38,40,41,42,43,65,66,67,68,70,71,73,74,75,76,79,82,84,109,112,115,117,122,125,135,138,141,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'MINUS':([5,13,35,39,44,45,47,48,53,54,55,56,57,58,59,60,62,81,83,88,89,90,91,93,94,96,97,99,100,102,106,113,118,121,124,128,129,130,133,134,136,142,144,145,146,],[-6,-7,-58,-57,-59,-56,71,-55,71,-43,71,-44,-49,71,71,71,71,-54,-31,71,-47,71,71,-45,-46,-48,71,71,71,71,71,-24,-30,-39,71,71,71,71,71,71,-19,-29,71,71,-18,]),'DOT':([5,13,35,39,44,45,47,48,53,54,55,56,57,58,59,60,62,81,83,88,89,90,91,92,93,94,96,97,99,100,102,106,113,118,121,124,128,129,130,133,134,136,142,144,145,146,],[-6,-7,-58,-57,-59,-56,72,-55,72,-43,72,72,72,72,72,72,72,-54,-31,72,72,72,72,111,72,72,72,72,72,72,72,72,-24,-30,-39,72,72,72,72,72,72,-19,-29,72,72,-18,]),'RBRACE':([5,9,13,14,16,17,21,22,35,39,44,45,48,54,56,57,58,61,81,83,84,88,89,90,91,93,94,96,97,100,107,113,118,121,124,130,136,142,146,],[-6,-9,-7,18,-9,-9,27,-8,-58,-57,-59,-56,-55,-43,-44,-49,-53,83,-54,-31,-33,-51,-47,-52,-50,-45,-46,-48,-17,116,-32,-24,-30,-39,-34,140,-19,-29,-18,]),'CASE':([28,33,36,37,38,40,41,42,43,65,66,67,68,70,71,73,74,75,76,79,82,84,109,112,115,117,122,125,135,138,141,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'LE':([5,13,35,39,44,45,47,48,53,54,55,56,57,58,59,60,62,81,83,88,89,90,91,93,94,96,97,99,100,102,106,113,118,121,124,128,129,130,133,134,136,142,144,145,146,],[-6,-7,-58,-57,-59,-56,65,-55,65,-43,65,-44,-49,65,65,65,65,-54,-31,None,-47,None,None,-45,-46,-48,65,65,65,65,65,-24,-30,-39,65,65,65,65,65,65,-19,-29,65,65,-18,]),'RPAREN':([5,13,20,25,30,35,39,44,45,48,51,52,54,56,57,58,59,75,78,81,83,88,89,90,91,93,94,96,97,98,99,112,113,114,118,121,124,127,128,129,135,136,137,139,142,143,144,146,147,],[-6,-7,24,-13,50,-58,-57,-59,-56,-55,-13,-16,-43,-44,-49,-53,81,-26,-12,-54,-31,-51,-47,-52,-50,-45,-46,-48,-17,113,-28,-21,-24,-25,-30,-39,-34,136,-23,-28,-21,-19,-20,-27,-29,146,-23,-18,-22,]),'SEMI':([4,5,12,13,18,23,27,35,39,44,45,47,48,54,56,57,58,62,81,83,88,89,90,91,93,94,96,97,104,113,116,118,121,124,136,140,142,145,146,],[7,-6,17,-7,-4,-15,-5,-58,-57,-59,-56,-14,-55,-43,-44,-49,-53,84,-54,-31,-51,-47,-52,-50,-45,-46,-48,-17,120,-24,-10,-30,-39,-34,-19,-11,-29,-42,-18,]),'RARROW':([5,131,],[-6,141,]),'ISVOID':([28,33,36,37,38,40,41,42,43,65,66,67,68,70,71,73,74,75,76,79,82,84,109,112,115,117,122,125,135,138,141,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'LARROW':([5,13,23,48,110,],[-6,-7,28,74,125,]),'LT':([5,13,35,39,44,45,47,48,53,54,55,56,57,58,59,60,62,81,83,88,89,90,91,93,94,96,97,99,100,102,106,113,118,121,124,128,129,130,133,134,136,142,144,145,146,],[-6,-7,-58,-57,-59,-56,68,-55,68,-43,68,-44,-49,68,68,68,68,-54,-31,None,-47,None,None,-45,-46,-48,68,68,68,68,68,-24,-30,-39,68,68,68,68,68,68,-19,-29,68,68,-18,]),'COMMA':([5,13,25,35,39,44,45,48,51,52,54,56,57,58,63,81,83,88,89,90,91,93,94,96,97,99,108,110,113,118,121,124,128,129,134,136,142,144,146,],[-6,-7,31,-58,-57,-59,-56,-55,31,-16,-43,-44,-49,-53,85,-54,-31,-51,-47,-52,-50,-45,-46,-48,-17,115,85,-37,-24,-30,-39,-34,138,115,-38,-19,-29,138,-18,]),'TILDE':([28,33,36,37,38,40,41,42,43,65,66,67,68,70,71,73,74,75,76,79,82,84,109,112,115,117,122,125,135,138,141,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'PLUS':([5,13,35,39,44,45,47,48,53,54,55,56,57,58,59,60,62,81,83,88,89,90,91,93,94,96,97,99,100,102,106,113,118,121,124,128,129,130,133,134,136,142,144,145,146,],[-6,-7,-58,-57,-59,-56,70,-55,70,-43,70,-44,-49,70,70,70,70,-54,-31,70,-47,70,70,-45,-46,-48,70,70,70,70,70,-24,-30,-39,70,70,70,70,70,70,-19,-29,70,70,-18,]),'STRING':([28,33,36,37,38,40,41,42,43,65,66,67,68,70,71,73,74,75,76,79,82,84,109,112,115,117,122,125,135,138,141,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'IDENTIFIER':([9,16,17,20,28,31,33,36,37,38,40,41,42,43,46,65,66,67,68,70,71,72,73,74,75,76,79,80,82,84,85,109,111,112,115,117,120,122,125,135,138,141,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'CLASS':([0,7,],[2,2,]),'$end':([1,3,7,10,],[-1,0,-3,-2,]),'INHERITS':([5,6,],[-6,8,]),'DIVIDE':([5,13,35,39,44,45,47,48,53,54,55,56,57,58,59,60,62,81,83,88,89,90,91,93,94,96,97,99,100,102,106,113,118,121,124,128,129,130,133,134,136,142,144,145,146,],[-6,-7,-58,-57,-59,-56,73,-55,73,-43,73,-44,-49,73,73,73,73,-54,-31,73,-47,73,73,73,73,-48,73,73,73,73,73,-24,-30,-39,73,73,73,73,73,73,-19,-29,73,73,-18,]),'EQUALS':([5,13,35,39,44,45,47,48,53,54,55,56,57,58,59,60,62,81,83,88,89,90,91,93,94,96,97,99,100,102,106,113,118,121,124,128,129,130,133,134,136,142,144,145,146,],[-6,-7,-58,-57,-59,-56,67,-55,67,-43,67,-44,-49,67,67,67,67,-54,-31,None,-47,None,None,-45,-46,-48,67,67,67,67,67,-24,-30,-39,67,67,67,67,67,67,-19,-29,67,67,-18,]),'TIMES':([5,13,35,39,44,45,47,48,53,54,55,56,57,58,59,60,62,81,83,88,89,90,91,93,94,96,97,99,100,102,106,113,118,121,124,128,129,130,133,134,136,142,144,145,146,],[-6,-7,-58,-57,-59,-56,66,-55,66,-43,66,-44,-49,66,66,66,66,-54,-31,66,-47,66,66,66,66,-48,66,66,66,66,66,-24,-30,-39,66,66,66,66,66,66,-19,-29,66,66,-18,]),'ESAC':([105,120,132,],[121,-41,-40,]),'AT':([5,13,35,39,44,45,47,48,53,54,55,56,57,58,59,60,62,81,83,88,89,90,91,93,94,96,97,99,100,102,106,113,118,121,124,128,129,130,133,134,136,142,144,145,146,],[-6,-7,-58,-57,-59,-56,69,-55,69,-43,69,69,69,69,69,69,69,-54,-31,69,69,69,69,69,69,69,69,69,69,69,69,-24,-30,-39,69,69,69,69,69,69,-19,-29,69,69,-18,]),'LPAREN':([13,15,28,33,36,37,38,40,41,42,43,48,65,66,67,68,70,71,73,74,75,76,79,82,84,95,109,112,115,117,122,125,126,135,138,141,],[-7,20,41,41,41,41,41,41,41,41,41,75,41,41,41,41,41,41,41,41,41,41,41,41,41,112,41,41,41,41,41,41,135,41,41,41,]),'IN':([5,13,35,39,44,45,48,54,56,57,58,63,81,83,86,88,89,90,91,93,94,96,97,108,110,113,118,121,123,124,134,136,142,146,],[-6,-7,-58,-57,-59,-56,-55,-43,-44,-49,-53,-36,-54,-31,109,-51,-47,-52,-50,-45,-46,-48,-17,-36,-37,-24,-30,-39,-35,-34,-38,-19,-29,-18,]),'ELSE':([5,13,35,39,44,45,48,54,56,57,58,81,83,88,89,90,91,93,94,96,97,106,113,118,121,124,136,142,146,],[-6,-7,-58,-57,-59,-56,-55,-43,-44,-49,-53,-54,-31,-51,-47,-52,-50,-45,-46,-48,-17,122,-24,-30,-39,-34,-19,-29,-18,]),'POOL':([5,13,35,39,44,45,48,54,56,57,58,81,83,88,89,90,91,93,94,96,97,102,113,118,121,124,136,142,146,],[-6,-7,-58,-57,-59,-56,-55,-43,-44,-49,-53,-54,-31,-51,-47,-52,-50,-45,-46,-48,-17,118,-24,-30,-39,-34,-19,-29,-18,]),'IF':([28,33,36,37,38,40,41,42,43,65,66,67,68,70,71,73,74,75,76,79,82,84,109,112,115,117,122,125,135,138,141,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'LBRACE':([5,6,11,28,33,36,37,38,40,41,42,43,49,65,66,67,68,70,71,73,74,75,76,79,82,84,101,109,112,115,117,122,125,135,138,141,],[-6,9,16,43,43,43,43,43,43,43,43,43,76,43,43,43,43,43,43,43,43,43,43,43,43,43,117,43,43,43,43,43,43,43,43,43,]),'FALSE':([28,33,36,37,38,40,41,42,43,65,66,67,68,70,71,73,74,75,76,79,82,84,109,112,115,117,122,125,135,138,141,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'OF':([5,13,35,39,44,45,48,54,55,56,57,58,81,83,88,89,90,91,93,94,96,97,113,118,121,124,136,142,146,],[-6,-7,-58,-57,-59,-56,-55,-43,80,-44,-49,-53,-54,-31,-51,-47,-52,-50,-45,-46,-48,-17,-24,-30,-39,-34,-19,-29,-18,]),'LET':([28,33,36,37,38,40,41,42,43,65,66,67,68,70,71,73,74,75,76,79,82,84,109,112,115,117,122,125,135,138,141,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'NOT':([28,33,36,37,38,40,41,42,43,65,66,67,68,70,71,73,74,75,76,79,82,84,109,112,115,117,122,125,135,138,141,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'TYPE':([2,8,19,29,32,34,69,77,87,119,],[5,5,5,5,5,5,5,5,5,5,]),'LOOP':([5,13,35,39,44,45,48,53,54,56,57,58,81,83,88,89,90,91,93,94,96,97,113,118,121,124,136,142,146,],[-6,-7,-58,-57,-59,-56,-55,79,-43,-44,-49,-53,-54,-31,-51,-47,-52,-50,-45,-46,-48,-17,-24,-30,-39,-34,-19,-29,-18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'caseelementlist':([80,120,],[105,132,]),'idlist':([99,129,],[114,139,]),'caseelement':([80,120,],[104,104,]),'classlist':([0,7,],[1,10,]),'formallist':([25,51,],[30,78,]),'binding':([46,85,],[63,108,]),'feature':([9,16,17,],[12,12,12,]),'ddlist':([112,135,],[127,143,]),'program':([0,],[3,]),'bindinglist':([63,108,],[86,123,]),'featurelist':([9,16,17,],[14,21,22,]),'exp':([28,33,36,37,38,40,41,42,43,65,66,67,68,70,71,73,74,75,76,79,82,84,109,112,115,117,122,125,135,138,141,],[47,53,55,56,57,58,59,60,62,88,89,90,91,93,94,96,97,99,100,102,106,62,124,128,129,130,133,134,128,144,145,]),'ddelem':([128,144,],[137,147,]),'idexpr':([75,],[98,]),'explist':([43,84,],[61,107,]),'identifier':([9,16,17,20,28,31,33,36,37,38,40,41,42,43,46,65,66,67,68,70,71,72,73,74,75,76,79,80,82,84,85,109,111,112,115,117,120,122,125,135,138,141,],[15,15,15,26,48,26,48,48,48,48,48,48,48,48,64,48,48,48,48,48,48,95,48,48,48,48,48,103,48,48,64,48,126,48,48,48,103,48,48,48,48,48,]),'type':([2,8,19,29,32,34,69,77,87,119,],[6,11,23,49,52,54,92,101,110,131,]),'class':([0,7,],[4,4,]),'formal':([20,31,],[25,51,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> classlist','program',1,'p_program_classlist','main.py',146),
  ('classlist -> class SEMI classlist','classlist',3,'p_classlist','main.py',150),
  ('classlist -> class SEMI','classlist',2,'p_classlist','main.py',151),
  ('class -> CLASS type LBRACE featurelist RBRACE','class',5,'p_class','main.py',160),
  ('class -> CLASS type INHERITS type LBRACE featurelist RBRACE','class',7,'p_class','main.py',161),
  ('type -> TYPE','type',1,'p_type','main.py',168),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','main.py',172),
  ('featurelist -> feature SEMI featurelist','featurelist',3,'p_featurelist','main.py',176),
  ('featurelist -> <empty>','featurelist',0,'p_featurelist','main.py',177),
  ('feature -> identifier LPAREN RPAREN COLON type LBRACE exp RBRACE','feature',8,'p_feature_method','main.py',186),
  ('feature -> identifier LPAREN formal formallist RPAREN COLON type LBRACE exp RBRACE','feature',10,'p_feature_method','main.py',187),
  ('formallist -> COMMA formal formallist','formallist',3,'p_formallist','main.py',194),
  ('formallist -> <empty>','formallist',0,'p_formallist','main.py',195),
  ('feature -> identifier COLON type LARROW exp','feature',5,'p_feature','main.py',204),
  ('feature -> identifier COLON type','feature',3,'p_feature','main.py',205),
  ('formal -> identifier COLON type','formal',3,'p_formal','main.py',216),
  ('exp -> identifier LARROW exp','exp',3,'p_exp_assign','main.py',223),
  ('exp -> exp AT type DOT identifier LPAREN ddlist RPAREN','exp',8,'p_exp_dispatch','main.py',229),
  ('exp -> exp DOT identifier LPAREN ddlist RPAREN','exp',6,'p_exp_dispatch','main.py',230),
  ('ddlist -> exp ddelem','ddlist',2,'p_ddlist','main.py',237),
  ('ddlist -> <empty>','ddlist',0,'p_ddlist','main.py',238),
  ('ddelem -> COMMA exp ddelem','ddelem',3,'p_ddelem','main.py',245),
  ('ddelem -> <empty>','ddelem',0,'p_ddelem','main.py',246),
  ('exp -> identifier LPAREN idexpr RPAREN','exp',4,'p_exp_self_dispatch','main.py',254),
  ('idexpr -> exp idlist','idexpr',2,'p_idexpr','main.py',258),
  ('idexpr -> <empty>','idexpr',0,'p_idexpr','main.py',259),
  ('idlist -> COMMA exp idlist','idlist',3,'p_idlist','main.py',266),
  ('idlist -> <empty>','idlist',0,'p_idlist','main.py',267),
  ('exp -> IF exp THEN exp ELSE exp FI','exp',7,'p_expr_if','main.py',275),
  ('exp -> WHILE exp LOOP exp POOL','exp',5,'p_expr_while','main.py',280),
  ('exp -> LBRACE explist RBRACE','exp',3,'p_exp_block','main.py',285),
  ('explist -> exp SEMI explist','explist',3,'p_explist','main.py',289),
  ('explist -> exp SEMI','explist',2,'p_explist','main.py',290),
  ('exp -> LET binding bindinglist IN exp','exp',5,'p_exp_let','main.py',298),
  ('bindinglist -> COMMA binding bindinglist','bindinglist',3,'p_bindinglist','main.py',302),
  ('bindinglist -> <empty>','bindinglist',0,'p_bindinglist','main.py',303),
  ('binding -> identifier COLON type','binding',3,'p_binding','main.py',310),
  ('binding -> identifier COLON type LARROW exp','binding',5,'p_binding','main.py',311),
  ('exp -> CASE exp OF caseelementlist ESAC','exp',5,'p_exp_case','main.py',321),
  ('caseelementlist -> caseelement SEMI caseelementlist','caseelementlist',3,'p_caseelementlist','main.py',325),
  ('caseelementlist -> caseelement SEMI','caseelementlist',2,'p_caseelementlist','main.py',326),
  ('caseelement -> identifier COLON type RARROW exp','caseelement',5,'p_caseelement','main.py',333),
  ('exp -> NEW type','exp',2,'p_exp_new','main.py',338),
  ('exp -> ISVOID exp','exp',2,'p_exp_isvoid','main.py',343),
  ('exp -> exp PLUS exp','exp',3,'p_exp_plus','main.py',348),
  ('exp -> exp MINUS exp','exp',3,'p_exp_minus','main.py',354),
  ('exp -> exp TIMES exp','exp',3,'p_exp_times','main.py',359),
  ('exp -> exp DIVIDE exp','exp',3,'p_exp_divide','main.py',364),
  ('exp -> TILDE exp','exp',2,'p_exp_negate','main.py',369),
  ('exp -> exp LT exp','exp',3,'p_exp_lt','main.py',374),
  ('exp -> exp LE exp','exp',3,'p_exp_le','main.py',379),
  ('exp -> exp EQUALS exp','exp',3,'p_exp_eq','main.py',384),
  ('exp -> NOT exp','exp',2,'p_exp_not','main.py',389),
  ('exp -> LPAREN exp RPAREN','exp',3,'p_exp_parenthesis','main.py',393),
  ('exp -> identifier','exp',1,'p_exp_identifier','main.py',398),
  ('exp -> INTEGER','exp',1,'p_exp_integer','main.py',403),
  ('exp -> STRING','exp',1,'p_exp_string','main.py',408),
  ('exp -> TRUE','exp',1,'p_exp_true','main.py',413),
  ('exp -> FALSE','exp',1,'p_exp_false','main.py',418),
]
